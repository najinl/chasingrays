{"version":3,"sources":["apiCalls.js","Models.js","components/Header/Header.js","components/Activities/Activities.js","components/WeatherCard/WeatherCard.js","components/ActivityCard/ActivityCard.js","components/ActivityFeed/ActivityFeed.js","components/FavoriteCard/FavoriteCard.js","components/FavoriteFeed/FavoriteFeed.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["getWeather","noaaGrids","a","Promise","all","map","grid","fetch","responses","response","json","noaaGridLocales","bikingTrails","trail","city","noaaGrid","type","weather","hikingTrails","climbingAreas","Header","className","to","size","Activities","setActivity","updateActivity","activitySelections","activity","toLowerCase","onClick","Math","random","WeatherCard","dailyWeather","filteredWeather","day","name","substring","startTime","temperature","temperatureUnit","src","icon","alt","shortForecast","ActivityCard","addToFavorites","todayShort","Date","toISOString","split","filter","includes","ActivityFeed","currentActivity","bikingOptions","hikingOptions","climbingOptions","trailData","area","FavoriteCard","removeFromFavorites","FavoriteFeed","useState","favorites","setFavorites","useEffect","JSON","parse","localStorage","getItem","trailToRemove","updatedLocalHistory","setItem","stringify","favorited","App","setBikingOptions","setHikingOptions","setClimbingOptions","error","setError","history","useHistory","then","data","populatedBikingTrails","i","properties","periods","populateHikingTrails","populateClimbingAreas","catch","err","chosenActivity","visitActivityPage","favoritedTrail","matchingTrail","find","localHistory","favoritedHistory","push","exact","path","render","match","params","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bfd27448.chunk.js","sourcesContent":["export const getWeather = async (noaaGrids) => {\n  const responses = await Promise.all(noaaGrids.map(grid => fetch(`https://api.weather.gov/gridpoints/${grid}/forecast`)))\n  const json = await Promise.all(responses.map(response => response.json()))\n  return json;\n}\n","export const noaaGridLocales = ['BOU/54,62', 'BOU/46,80', 'BOU/49,46', 'GJT/172,120', 'BOU/50,57', 'BOU/25,52', 'BOU/45,64', 'GJT/94,101']\n\nexport const bikingTrails = [\n  {\n    trail: 'White Ranch Park',\n    city: 'Golden',\n    noaaGrid: 'BOU/54,62',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Walker Ranch',\n    city: 'Boulder',\n    noaaGrid: 'BOU/46,80',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Buffalo Creek',\n    city: 'Pine',\n    noaaGrid: 'BOU/49,46',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Meadow Mountain Loop',\n    city: 'Vail',\n    noaaGrid: 'GJT/172,120',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Three Sisters',\n    city: 'Evergreen',\n    noaaGrid: 'BOU/50,57',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Miners Creek',\n    city: 'Breckenridge',\n    noaaGrid: 'BOU/25,52',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Maryland Mountain',\n    city: 'Black Hawk',\n    noaaGrid: 'BOU/45,64',\n    type: 'Mountain Biking',\n    weather: null\n  },\n  {\n    trail: 'Gunny Loop',\n    city: 'Grand Junction',\n    noaaGrid: 'GJT/94,101',\n    type: 'Mountain Biking',\n    weather: null\n  }\n]\n\nexport const hikingTrails = [\n  {\n    trail: 'North Table Mountain',\n    city: 'Golden',\n    noaaGrid: 'BOU/54,62',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Chautauqua Trail',\n    city: 'Boulder',\n    noaaGrid: 'BOU/46,80',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Staunton Ranch Trail',\n    city: 'Pine',\n    noaaGrid: 'BOU/49,46',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Booth Falls',\n    city: 'Vail',\n    noaaGrid: 'GJT/172,120',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Bergen Peak Trail',\n    city: 'Evergreen',\n    noaaGrid: 'BOU/50,57',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Spruce Creek Loop',\n    city: 'Breckenridge',\n    noaaGrid: 'BOU/25,52',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Maryland Mountain',\n    city: 'Black Hawk',\n    noaaGrid: 'BOU/45,64',\n    type: 'Hiking',\n    weather: null\n  },\n  {\n    trail: 'Serpents Trail',\n    city: 'Grand Junction',\n    noaaGrid: 'GJT/94,101',\n    type: 'Hiking',\n    weather: null\n  }\n]\n  export const climbingAreas = [\n    {\n      trail: 'Tiers of Zion',\n      city: 'Golden',\n      noaaGrid: 'BOU/54,62',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Eldorado Canyon',\n      city: 'Boulder',\n      noaaGrid: 'BOU/46,80',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Staunton Ranch Trail',\n      city: 'Pine',\n      noaaGrid: 'BOU/49,46',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Wolcott Crags',\n      city: 'Vail',\n      noaaGrid: 'GJT/172,120',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Three Sisters',\n      city: 'Evergreen',\n      noaaGrid: 'BOU/50,57',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Tenmile Range',\n      city: 'Breckenridge',\n      noaaGrid: 'BOU/25,52',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'The Ameristar Boulder',\n      city: 'Black Hawk',\n      noaaGrid: 'BOU/45,64',\n      type: 'Hiking',\n      weather: null\n    },\n    {\n      trail: 'Unaweep Canyon',\n      city: 'Grand Junction',\n      noaaGrid: 'GJT/94,101',\n      type: 'Hiking',\n      weather: null\n    }\n]\n","import React from 'react';\nimport { AiFillHome, AiFillHeart } from \"react-icons/ai\";\nimport { Link } from 'react-router-dom';\nimport './Header.css';\n\nconst Header = () => {\n\nreturn(\n    <header>\n      <div className=\"logo\">\n        <div className=\"top-logo\">\n          <p className=\"app-name\">RAY</p>\n          <div className=\"sun-img\"></div>\n        </div>\n        <div className=\"bottom-logo\">\n          <p>CHASING</p>\n        </div>\n      </div>\n      <section className=\"nav-container\">\n        <Link className=\"favorites-btn\" to=\"/favorites\">\n          <AiFillHeart size={42}/>\n        </Link>\n        <Link className=\"home-btn\" to=\"/\">\n          <AiFillHome size={50}/>\n        </Link>\n      </section>\n    </header>\n  )\n}\n\nexport default Header;\n","import React from 'react';\nimport './Activities.css';\n\nconst Activities = ({ setActivity, updateActivity }) => {\n  const activities = ['Climbing', 'Hiking', 'Mountain Biking'];\n\n  const activitySelections = activities.map(activity => {\n    return (\n      <div key={Math.random()}>\n        <h2>{activity}</h2>\n        <button className={`cy-activity-btn ${activity.toLowerCase()}-btn`} key={activity} onClick={() => updateActivity(activity)}>\n        </button>\n      </div>\n    )\n  })\n\n  return(\n    <div className='activity-options'>\n      <section className='activities'>\n        {activitySelections}\n      </section>\n    </div>\n  )\n}\n\nexport default Activities;\n","import React from 'react';\nimport './WeatherCard.css';\n\n\nconst WeatherCard = ({ filteredWeather }) => {\n  let dailyWeather=[];\n\n  dailyWeather = filteredWeather.map(day => {\n    return (\n        <div className=\"day-card\" key={Math.random()}>\n            <div className=\"date\">\n              <div className=\"day-of-week\">{day.name.substring(0,3)}</div>\n              <div className=\"day\">{day.startTime.substring(8,10)}</div>\n              <div className=\"temperature\">{`${day.temperature}°${day.temperatureUnit}`}</div>\n            </div>\n            <img className=\"weather-img\" src={day.icon} alt=\"representative weather\"/>\n            <div className=\"short-forecast\">{day.shortForecast}</div>\n        </div>\n    )\n  })\n\n  return (\n    <div className=\"weather-container\">\n      {dailyWeather}\n    </div>\n  )\n}\n\n\nexport default WeatherCard;\n","import React from 'react';\nimport WeatherCard from '../WeatherCard/WeatherCard';\nimport { AiFillHeart } from \"react-icons/ai\";\nimport './ActivityCard.css';\n\n\nconst ActivityCard = ({ trail, city, weather, addToFavorites }) => {\n  let filteredWeather = [];\n  const todayFull = new Date()\n  const todayShort = todayFull.toISOString().split('T')[0]\n\n  filteredWeather = weather.filter(day => {\n    return (!day.name.includes('Night') && !day.name.includes('Tonight') && day.startTime > todayShort)\n  })\n\n  return (\n    <div className=\"activity-container\">\n      <section className=\"trail-title\">\n        <h3>{trail}</h3>\n        <AiFillHeart className='heart-btn'size={30} onClick={() => addToFavorites({trail: trail, city: city})}/>\n      </section>\n      <p className=\"city\">{`${city}, Colorado`}</p>\n      <WeatherCard filteredWeather={filteredWeather}/>\n    </div>\n  )\n}\n\n\nexport default ActivityCard;\n","import React from 'react';\nimport ActivityCard from '../ActivityCard/ActivityCard';\nimport './ActivityFeed.css';\n\n\nconst ActivityFeed = ({ currentActivity, bikingOptions, hikingOptions, climbingOptions, addToFavorites }) => {\n  let trailData = [];\n\n  if(currentActivity === 'Mountain Biking') {\n    trailData = bikingOptions.map(trail => {\n      return (\n        <ActivityCard\n          trail={trail.trail}\n          city={trail.city}\n          weather={trail.weather}\n          addToFavorites={addToFavorites}\n          key={Math.random()}\n        />\n      )\n    })\n  } else if(currentActivity === 'Hiking') {\n    trailData = hikingOptions.map(trail => {\n      return (\n        <ActivityCard\n          trail={trail.trail}\n          city={trail.city}\n          weather={trail.weather}\n          addToFavorites={addToFavorites}\n          key={Math.random()}\n        />\n      )\n    })\n  } else {\n    trailData = climbingOptions.map(area => {\n      return (\n        <ActivityCard\n          trail={area.trail}\n          city={area.city}\n          weather={area.weather}\n          addToFavorites={addToFavorites}\n          key={Math.random()}\n        />\n      )\n    })\n  }\n\n  return (\n    <div className=\"activities-container\">\n      { trailData }\n    </div>\n  )\n}\n\nexport default ActivityFeed;\n","import React from 'react';\nimport { AiOutlineMinusCircle  } from \"react-icons/ai\";\nimport './FavoriteCard.css';\n\n\nconst FavoriteCard = ({ trail, city, removeFromFavorites }) => {\n\n  return (\n    <section className=\"favorite-card\">\n      <div className=\"favorite-data\">\n        <h3>{trail}</h3>\n        <p>{`${city}, Colorado`}</p>\n      </div>\n      <AiOutlineMinusCircle className=\"remove-favorite-btn\" onClick={() => removeFromFavorites(trail)}/>\n    </section>\n  )\n}\n\nexport default FavoriteCard;\n","import React, { useEffect, useState } from 'react';\nimport FavoriteCard from '../FavoriteCard/FavoriteCard';\nimport './FavoriteFeed.css';\n\n\nconst FavoriteFeed = () => {\n  const [favorites, setFavorites] = useState([]);\n\n  useEffect(() => {\n    setFavorites(JSON.parse(localStorage.getItem('favoritesHistory')));\n  },[])\n\n  const removeFromFavorites = (trailToRemove) => {\n    const localHistory = JSON.parse(localStorage.getItem('favoritesHistory'));\n    const updatedLocalHistory = localHistory.filter(trail => trail.trail !== trailToRemove)\n    localStorage.setItem('favoritesHistory', JSON.stringify(updatedLocalHistory));\n    setFavorites(JSON.parse(localStorage.getItem('favoritesHistory')));\n  }\n\n  const favoriteCards = () => favorites.map(favorited => {\n    return (\n      <FavoriteCard\n      trail={favorited.trail}\n      city={favorited.city}\n      removeFromFavorites = {removeFromFavorites}\n      key={Math.random()}\n      />\n    )\n  })\n\n  return (\n    <div className=\"favorites-container\">\n      { favoriteCards() }\n    </div>\n  )\n}\n\nexport default FavoriteFeed;\n","import React, { useEffect, useState } from 'react';\nimport {Route, Switch, useHistory } from 'react-router-dom';\nimport { getWeather } from '../../apiCalls';\nimport { noaaGridLocales, bikingTrails, hikingTrails, climbingAreas } from '../../Models.js';\nimport Header from '../Header/Header'\nimport Activities from '../Activities/Activities';\nimport ActivityFeed from '../ActivityFeed/ActivityFeed';\nimport FavoriteFeed from '../FavoriteFeed/FavoriteFeed';\nimport './App.css';\n\nfunction App() {\n  const [currentActivity, setActivity] = useState('');\n  const [bikingOptions, setBikingOptions] = useState([]);\n  const [hikingOptions, setHikingOptions] = useState([]);\n  const [climbingOptions, setClimbingOptions] = useState([]);\n  const [favorites, setFavorites] = useState([]);\n  const [error, setError] = useState('');\n  const history = useHistory();\n\n  useEffect(() => {\n    getWeather(noaaGridLocales).then(data => {\n      const populatedBikingTrails = bikingTrails.map((trail, i) => {\n        trail.weather = data[i].properties.periods\n        return trail;\n      })\n      const populateHikingTrails = hikingTrails.map((trail, i) => {\n        trail.weather = data[i].properties.periods\n        return trail;\n      })\n      const populateClimbingAreas = climbingAreas.map((area, i) => {\n        area.weather = data[i].properties.periods\n        return area;\n      })\n      setBikingOptions(populatedBikingTrails)\n      setHikingOptions(populateHikingTrails)\n      setClimbingOptions(populateClimbingAreas)\n    })\n    .catch(err => setError('ughhh, we are having issues! Working on it.'))\n  },[])\n\n  const updateActivity = (chosenActivity) => {\n    visitActivityPage(chosenActivity)\n  }\n\n  const addToFavorites = (favoritedTrail) => {\n    const matchingTrail = favorites.find(favorited => favorited.trail === favoritedTrail.trail);\n    const localHistory = JSON.parse(localStorage.getItem('favoritesHistory'));\n    if(!localHistory) {\n      localStorage.setItem('favoritesHistory', JSON.stringify([favoritedTrail]));\n      let favoritedHistory = localStorage.getItem('favoritesHistory');\n      setFavorites(JSON.parse(favoritedHistory))\n    } else if(localHistory && !matchingTrail) {\n      let favoritedHistory = JSON.parse(localStorage.getItem('favoritesHistory'))\n      favoritedHistory.push(favoritedTrail)\n      localStorage.setItem('favoritesHistory', JSON.stringify(favoritedHistory));\n      setFavorites(favoritedHistory)\n    }\n  }\n\n  const visitActivityPage = (activity) => {\n    setActivity(activity)\n    history.push(`/${activity}`)\n  }\n\n  return (\n    <div className=\"app-container\">\n      <Header />\n      <Switch>\n      <Route exact path=\"/\" render={() => {\n        if(error) {\n          return (\n            <p>{error}</p>\n          )\n        }\n        return (\n          <Activities\n          updateActivity={updateActivity}/>\n        )\n      }}\n      />\n      <Route exact path=\"/favorites\" render={() => {\n        return (\n          <FavoriteFeed />\n        )\n      }}\n      />\n      <Route exact path=\"/:activity\" render={({ match } ) => {\n        return (\n          <ActivityFeed\n          currentActivity={match.params.activity}\n          bikingOptions={bikingOptions}\n          hikingOptions={hikingOptions}\n          climbingOptions={climbingOptions}\n          addToFavorites={addToFavorites}\n          />\n        )\n      }}\n      />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter><App /></BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}